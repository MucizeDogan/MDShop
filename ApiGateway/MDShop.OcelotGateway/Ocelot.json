{
  "Routes": [
    //Catalog Mikroservisi
    {
      "DownstreamPathTemplate": "/api/{everything}", // api/category/... gibi api den sonra ne gelirsin gelsin karşılayacak
      "DownstreamScheme": "http", //https değil http kullanıyoruz
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7070 //catolog port
        }
      ],
      "UpstreamPathTemplate": "/services/catalog/{everything}", // isteğin yapılacağı yer
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ], // Hangi metodlara izin veriliyor
      "UpstreamScheme": "http",
      "AuthenticationOptions": { // Key almamız gerekiyor
        "AuthenticationProviderKey": "OcelotAuthenticationScheme", // Key sağlayıcı ne olacak. Bizim key sağlayıcısıana ihtiyacımız var.
        "AllowedScopes": [ "CatalogFullPermission" ] // Catalog mikroservisine yapılacak isteklerde hangi aralıklara sahip olacak? (Config deki gibi)
      }
    },
    //Discount Mikroservisi
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7071
        }
      ],
      "UpstreamPathTemplate": "/services/discount/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "DiscountFullPermission" ]
      }
    },
    //Order Mikroservisi
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7072
        }
      ],
      "UpstreamPathTemplate": "/services/order/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "OrderFullPermission" ]
      }
    },
    //Cargo Mikroservisi
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7073
        }
      ],
      "UpstreamPathTemplate": "/services/cargo/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "CargoFullPermission" ]
      }
    },
    //Basket Mikroservisi
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7074
        }
      ],
      "UpstreamPathTemplate": "/services/basket/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "BasketFullPermission" ]
      }
    },
    //Comment Mikroservisi
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7075
        }
      ],
      "UpstreamPathTemplate": "/services/comment/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "CommentFullPermission" ]
      }
    }, 
    //Payment Mikroservisi
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7076
        }
      ],
      "UpstreamPathTemplate": "/services/payment/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "PaymentFullPermission" ]
      }
    },
    //Images Mikroservisi
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7077
        }
      ],
      "UpstreamPathTemplate": "/services/images/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "ImageFullPermission" ]
      }
    }
  ],
  "GlobalConfiguration": {
    "BaseUrl": "http://localhost:5000"
  }
}
// Upstream; client tarafından bize gelen isteğin olduğu kısım.
// Downstream; bu gelen isteği Ocelot da nasıl karşılayıp nasıl geri göndereceğiz (Requeste vereceğimiz yanıt.)
// Burada bütün mikroservislerimize dağıtım yapcağız.